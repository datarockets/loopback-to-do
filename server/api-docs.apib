FORMAT: 1A

# TODO app API docs v1

Note: all described endpoints should be used with `api/v1` prefix

## Card Collection [/api/v1/cards]

### POST
Creates Card

- Attributes (object)
    + description (string, required)

- Request (application/json)

    - Body

        ```
        {
          "description": "Homework"
        }
        ```

- Response 201 (application/json; charset=utf-8)

    - Attributes (object)
        + id (number)
        + description (string)
        + updatedAt (string) - Timestamp of the last time the card was updated;
        + createdAt (string) - Timestamp of the card creation.

    - Body

        ```
        {
          "id": 1,
          "description": "Homework",
          "updatedAt": "2018-12-05T16:44:29.408Z",
          "createdAt": "2018-12-05T16:44:29.408Z",
          "completedAt": null
        }
        ```

- Request (application/json)

    With invalid description (empty)

    - Body

        ```
        {
          "description": null
        }
        ```

- Response 400 (application/json; charset=utf-8)

### List All Cards [GET]

- Response 200 (application/json; charset=utf-8)

    - Body

        ```
        [
          {
            "id": 1,
            "description": "Homework",
            "updatedAt": "2018-12-05T16:44:29.408Z",
            "createdAt": "2018-12-05T16:44:29.408Z"
          }
        ]
        ```

## Card Completion Collection [/api/v1/cards/{id}/completion]

+ Parameters
    + id: 1 (number)

### POST
Create completion for card

- Request (application/json)

- Response 201 (application/json; charset=utf-8)

    - Attributes (object)
        + card (object)
            + completedAt (string) - Timestamp of the card completion creation.

    - Body

        ```
        {
          "card": {
            "completedAt": "2018-12-05T16:44:29.408Z"
          }
        }
        ```

### DELETE
Destroy completion for card

- Request (application/json)

+ Response 204


## Card [/api/v1/cards/{id}]

- Parameters
    + id: 1 (required)

### DELETE

- Request (application/json)
- Response 204

- Request (application/json)

    When record not found

    - Parameters
        + id: 1000 (required)

- Response 400 (application/json; charset=utf-8)

    - Attributes (object)
        + error (string) - Error type
        + message (string) - Error message

    - Body

        ```
        {
          error: "Bad Request",
          message: "Card not found"
        }
        ```

## Card Tags Collection [/api/v1/cards/{id}/tags]

- Parameters
    + id: 1 (required)

### POST
Creates Tag

- Attributes (object)
    + text (string, required)

- Request (application/json)

    - Body

        ```
        {
          "text": "Tag1"
        }
        ```

- Response 201 (application/json; charset=utf-8)

    - Attributes (object)
        + id (number)
        + text (string)
        + updatedAt (string) - Timestamp of the last time the tag was updated;
        + createdAt (string) - Timestamp of the tag creation.

    - Body

        ```
        {
          "id": 1,
          "text": "Tag1",
          "updatedAt": "2018-12-05T16:44:29.408Z",
          "createdAt": "2018-12-05T16:44:29.408Z",
        }
        ```

- Request (application/json)

    With invalid text (empty)

    - Body

        ```
        {
          "text": null
        }
        ```

- Response 400 (application/json; charset=utf-8)

## Card Tag [/api/v1/cards/{cardId}/tags/{tagId}]

- Parameters
    + cardId: 1 (required)
    + tagId: 1 (required)

### DELETE

- Request (application/json)
- Response 204

- Request (application/json)

    When record not found

    - Parameters
        + tagId: 1000 (required)

- Response 400 (application/json; charset=utf-8)

    - Attributes (object)
        + error (string) - Error type
        + message (string) - Error message

    - Body

        ```
        {
          error: "Bad Request",
          message: "Tag not found"
        }
        ```
